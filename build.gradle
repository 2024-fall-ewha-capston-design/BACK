plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ewha.capston'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리용

	//Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.lettuce:lettuce-core:6.5.3.RELEASE'

	// fast api
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// dns for mac
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.96.Final'
	runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.96.Final'

	// mongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

}
tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	jvmArgs = ['-Dio.netty.dns.native.disabled=true']
}

jar {
	enabled = false
}

/*
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs.add("-parameters")
}

 */

compileJava {    options.compilerArgs << '-parameters'}
