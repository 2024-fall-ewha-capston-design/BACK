name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_REGION: ap-northeast-2
      S3_BUCKET_NAME: happy-coder-github-actions-s3-bucket
      CODE_DEPLOY_APPLICATION_NAME: happyCoder-codedeploy-app
      CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: happyCoder-codedeploy-deployment-group

    permissions:
      contents: read

    steps:
      - name: ‚úÖ Checkout
        uses: actions/checkout@v3

      - name: ‚òï Set up JDK 17 (for Spring Boot)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: üõ†Ô∏è Make application.yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: üèóÔ∏è Build Spring Boot with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: üêç Prepare FastAPI dependencies (optional, mainly for local test)
        run: |
          cd fastAPI
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt || true
          cd ..

      - name: üîë Create .env file for FastAPI
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > ./fastAPI/.env

      - name: ‚òÅÔ∏è Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üì¶ Upload to AWS S3
        run: |
          zip -r $GITHUB_SHA.zip . -x "*.git*" "*venv/*"
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://${{ env.S3_BUCKET_NAME }}/$GITHUB_SHA.zip \
            --source .

      - name: üöÄ Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ env.S3_BUCKET_NAME }},key=$GITHUB_SHA.zip,bundleType=zip
